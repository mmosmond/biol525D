source ("http://www.bioconductor.org/biocLite.R")#
#
biocLite("edgeR")#
#
#find your working directory:#
getwd()#
#
#paste it in here (i.e. replace my path with yours):#
setwd ("/Users/kayhodgins/Dropbox/Documents/bioinformatics_workshop/bioinformatics_examples/data_for_exercises/rnaseq")#
#
#load the libraries you will need #
library ("edgeR")#
library ("gplots")
getwd()#
#
#paste it in here (i.e. replace my path with yours):#
setwd ("/Users/kayhodgins/Dropbox/Documents/bioinformatics_workshop/bioinformatics_examples/data_for_exercises/rnaseq")#
#
#load the libraries you will need #
library ("edgeR")#
library ("gplots")
data <- read.table ("cold_hot_expression.txt")
getwd()
paste it in here (i.e. replace my path with yours):#
setwd ("/Users/mmosmond/Documents/PHD/biol525D/Topic_6")#
#
#load the libraries you will need #
library ("edgeR")#
library ("gplots")#
#
#read in the data#
data <- read.table ("cold_hot_expression.txt")
load the libraries you will need #
library ("edgeR")#
library ("ggplots")#
#
#read in the data#
data <- read.table ("cold_hot_expression.txt")
library ("edgeR")#
library ("ggplot2")#
#
#read in the data#
data <- read.table ("cold_hot_expression.txt")
getwd()
install.packages(gplots)
install.packages("gplots")
library ("gplots")
head(data)
treat <- as.factor (sapply (strsplit(colnames(data),split = ""),"[[",1))
treat
list1 <- DGEList (counts = data, group = treat)
list1
list1 <- calcNormFactors (list1)
cpm.list1 <- cpm(list1)
head(cpm.list1)
list2 <- list1[rowSums(cpm.list1 > 1) >= 6,]
list2
cpm.list2 <- cpm.list1[rowSums(cpm.list1 > 1) >= 6,]
head(cpm.list2)
dim(cpm.list2)
col_treat <- as.character (treat)#
col_treat [col_treat == "C"] <- "blue"#
col_treat [col_treat == "H"] <- "red"
plotMDS (list2, col = col_treat)
design <- model.matrix (~treat)
list2 <- estimateGLMCommonDisp (list2, design)
list2 <- estimateGLMTagwiseDisp (list2, design)
list2
glm.list2 <- glmFit (list2, design, dispersion = list2$tagwise.dispersion)
lrt.list2 <- glmLRT (glm.list2)
head(lrt.list2)
lrt.list2
top <- topTags (lrt.list2, n = 1000)$table
fdr<-p.adjust(lrt.list2$table$PValue, method='fdr')
hist(fdr,  breaks=1000)
dim(lrt.list2$table[fdr<0.05,])
tive proportions (columns add up to 1)#
sub1 <- colSums (cpm.list2)#
sub2 <- matrix (rep(sub1,nrow (cpm.list2)), c (nrow (cpm.list2),ncol(cpm.list2)),byrow = TRUE)#
sub3 <- cpm.list2 / sub2#
#
#subset this matrix to just get the genes from above#
names1 <- row.names (sub3)#
names2 <- row.names (top)#
index2 <- names1 %in% names2#
heatmap
heatmap1 <- sub3[index2,]
sub1 <- colSums (cpm.list2)#
sub2 <- matrix (rep(sub1,nrow (cpm.list2)), c (nrow (cpm.list2),ncol(cpm.list2)),byrow = TRUE)#
sub3 <- cpm.list2 / sub2#
#
#subset this matrix to just get the genes from above#
names1 <- row.names (sub3)#
names2 <- row.names (top)#
index2 <- names1 %in% names2#
heatmap1 <- sub3[index2,]
heatmap1 <- sub3[index2,]
heatmap.2 (heatmap1, trace = "none", scale = "row", Colv = FALSE, labCol = treat,cexCol = 1, dendrogram = "none", labRow = FALSE, colsep =c(6), sepcolor = "white", sepwidth = 0.03)
subdat1 <- data["comp520_c0",]
stripchart (log10(as.numeric (subdat1)) ~ treat, vertical = T, xlim = c (0.5,2.5), method = "jitter", ylab = "Log10 Expression count")
